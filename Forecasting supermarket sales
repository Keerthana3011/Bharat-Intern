import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load the sales data into a Pandas DataFrame
sales_data = pd.read_csv('sales_data.csv')

# Convert the date column to datetime format
sales_data['date'] = pd.to_datetime(sales_data['date'])

# Sort the data by date
sales_data.sort_values('date', inplace=True)

# Extract the features and target variable
X = sales_data[['feature1', 'feature2', 'feature3']]  # Replace 'feature1', 'feature2', 'feature3' with actual feature names
y = sales_data['sales']  # Replace 'sales' with the actual column name for sales

# Split the data into training and testing sets
train_size = int(0.8 * len(sales_data))  # 80% for training, 20% for testing
X_train, X_test = X[:train_size], X[train_size:]
y_train, y_test = y[:train_size], y[train_size:]

# Create and fit the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Perform predictions on the test set
y_pred = model.predict(X_test)

# Calculate the root mean squared error (RMSE)
rmse = mean_squared_error(y_test, y_pred, squared=False)

# Plot the actual sales and predicted sales
plt.figure(figsize=(10, 6))
plt.plot(sales_data['date'][train_size:], y_test, label='Actual Sales')
plt.plot(sales_data['date'][train_size:], y_pred, label='Predicted Sales')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.title('Supermarket Sales Forecast')
plt.legend()
plt.show()

# Print the RMSE
print('Root Mean Squared Error:', rmse)
